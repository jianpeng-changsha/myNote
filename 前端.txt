概述：
1.1学习方式
前端：记不住
记核心脉络
https，分布式：hash
前端的目的和要求：上课认真听，作业
目的：站在后端程序员的角度了解前端是怎么回事，能看懂前端代码；--->防止工作背锅
2.好好学，写一些前端页面；

HTML
什么是前端：技术90年代初期，工作门类：10年
后端：

前端：一个页面或者一套网页
前端基础：HTML CSS  JS
网页：------->人
html---------->骨架
CSS--------->皮肤和血肉
js----------->思想逻辑/灵魂


HTML概念：
超文本标记语言：
首先是一个文本语言；并且是用标记描述的语言；
HTML是一个语言：一个偏标准的高级语言，应该具有哪些东西：变量定义，运算符；逻辑分支结构；
文本语言：是一个以.HTML为后缀的语言；
HTML是个语言：HTML5
一个偏标准的高级语言应该具有哪些东西：变量定义；运算符；逻辑/分支结构；
特点：1.整个HTML文档都是用标签表述的，2.标签承兑出现（不是绝对的）有开始有结束；3.整个HTML文档由<HTML>标签包裹；4.整个HTML文档分为两部分head和body
<!doctype html> html5的声明；meta描述网页的一些元信息；title标题
标签里面的/代表的是自结束

标签的分类：
行的定义取决于父元素，一行的宽表示从父元素的left到right
块级元素：块级元素独占一行，div p ul li table h1 form 2.可以直接控制宽度和高度内外边距；3.宽度可以继承高度不可以继承
行级元素：行级元素在行内显示，连续的行级元素排列在同一行 2.不能设置宽高，仅能设置内外边距的左右值；3.行级元素的宽高是有本身内容的大小决定；
注意：行级元素只能容纳文本或者其他行级元素（不要再行级元素中嵌套块级元素）行级元素是指本身属性为display：inline的元素；
行内块：本质属于行级元素，可以与其他行距元素共处一行，但是可以设置宽高和内外边距，属性为display：inline-book的元素；常见的行内块元素有input和img
可以在行内样式或者是css样式中改变元素的display将三种元素进行转换；


<hr>横向标签
属性：noshadow:颜色是否有阴影(纯色)  size：高度  width宽度   align对其方式
<br>换行符
<h1>-<h6>标题标签：属性align对其属性<h2 align="center">；；；注意在HTML草案中，自定义标签不具有任何特殊效果，该标签仅作为文本标签效果使用
<span>：是HTML定义的文本标签，没有特殊效果；
h1标签仅能在一个HTML页面上出现一次，h2-h6可以出现多次；原因是：因为在一个页面上h1标题所包含的文本内容会被当做是一个关键词信息会被爬虫爬走，meta描述的是元信息
<p>段落标签：可以描述一个段落(极类似与div)p标签相比于div标签自带上下间距；
<a>超链接标签：通过一个链接打开一个新的页面，<a href></a>	属性：href表示链接的地址是一个url；target表示打开页面的位置（属性：默认属性是self表示在本窗口打开；blank表示在新窗口打开；parent：在父窗口打开；top在顶级窗口打开） blank	       下划线text-decoration
iframe标签：在一个页面中导入另一个页面
<ol>表示有序列表
<ul>表示无序列表 type：disc实心圆；
table表格：表示整个表格  <tr>表示表格中的一行   <td>表示一行中的单元格  
table的属性：bgcolor：背景色；border 边框；cellspacing单元格之间的空白；cellpadding规定内边界
tr的属性：bgcolor背景色；valign规定表格航中内容的垂直对齐方式
tb的属性：colspan跨列rowspan跨行
注意：th 表示表头，取代表头的td，thead ，tfoot，tbody

input：输入框
input是一个表单元素
属性：text加和不加没有区别；password密码框；button按钮；hidden隐藏；radio单选框；checkedbox复选框；readonly
type=reset：      type=“summit”:
select下拉选项option
属性：selected默认选中属性；size下拉选项数；mutiple多选

textarea：多行文本
属性：cols列；rows行；maxlength最大；placeholder提示，readonly只读；
form：表单
url：三大部分：协议 域名+端口，服务器内部路径(虚拟的)服务器内部路径 虚拟路径+参数；
action：是form表单中用来表即url中非参数的部分；参数是有表单元素产生的，input，select；textarea
form元素的特点：表单元素有value值；这个value用来对应用户输入的东西对应选中；
在form表单中，当我们点击提交的时候，表单元素会根据它的name属性和value属性自动拼接成一份key-value数据，并把这个数据贴到url之后以“？”进行分隔，多个参数之间以&进行分隔
method：get/post请求方式有很多种，最重要的就是get/post。get/post有什么区别：get请求“一般” 把参数拼接到url之后；post请求一般把参数放到请求正文里；url之后拼接的参数，最多拼接1kb数据；2.get请求不安全post请求更不安全；3.最重要的区别：语义化区别；get请求一般用来获取数据；post请求一般用来提交数据

浏览器：在浏览器中输入一个url；这个url如果携带了域名--->通过dns把域名解析为ip地址；根据ip地址在互联网找到向应的服务，如果这次请求携带了接口，就去这个端口如果没有懈怠端口就选择默认端口,5.浏览器接收到返回的HTML相关内容，解析，显示；6.解析显示页面有一个form表单，输入内容点击提交，这个form表单会自动根据我们的form表达的foe吗表达的action属性，以及表达元素的name-value拼接出key-value数据最终形成一个带数据的url，把这个url交给浏览器，7.浏览器拿到form表单url发起请求，形成一个新的网页；
服务器：3.服务器在监听某个端口，一旦监听到请求，就接收请求并分析请求；4.分析的请求，如果需要数据区数据库中取数据，如果需要页面就在这个服务器中取出页面，把数据和页面整合到一起形成带数据的页面并返回给浏览器
服务器找那个的某一个服务：


对于一个浏览器，想要获得一个资源，真正需要的是产生一个url提交出去
不要再option的value上加中文，尽量不要加英文：1.不希望这个参数被别人直接知道作用；2.HTML只是用来显示的，它不应该用来存储数据（不是可不可以，而是不应该）


接口文档：


css：
在HTML中加很多东西会导致HTML臃肿；
主要用于设置
css以HTML为基础提供了丰富的样式功能；
怎样在HTML引入css：css以HTML为基础：说明css依赖于HTML而存在css用来描述HTML标签的；

选择器：
css选择器就是用来描述把html标签和对应css样式关联起来；
标签选择器：通过标签把HTML样式和标签关联起来；
类选择器：
类选择器通过类名将标签和样式关联起来；
类选择器通过类名把css样式把选择器关联起来；
id选择器：通过ID名ID属性通过ID名把对应的css对应的标识和HTML关联起来；
在一个HTML页面中，标签的id是唯一的；
！important强制把某个样式的优先级提到最高，该命令被赋予了最大优先级，也就是说不管权重如何以及样式位置的远近！important都具有最大优先级样式优先级是相同级别的那么遵照就近原则
盒子模型：
标准流/标准文档流：页面显示是根据标签顺序，按照从上向下，从左到右顺序排列
任何一个HTML标签在页面上所占据的空间都可以看成一个矩形的盒子（不管盒子大或者小），就是盒子模型
那么这个矩形的盒子只由四部分组成，元素内容区域，内边距区域，边框区域和外边距区域；我们设置的宽高实际上控制的是一个盒子模型元素内容区域的宽高，子元素占据的是父元素内容区域，背景色=内边距区域+元素内容区域


子元素占据的是父元素的元素内容区域


外边距合并：在HTML页面上当两个标签在垂直方向上紧相连那么就会产生合并，这种现象就称作是外边距合并

浮动：
是文档中的标签脱离标准流，形象的讲就是让一个标签显式漂浮起来
特点：浮动中影响后面的元素，因为浮动脱离了标准文档流，导致页面原本占据的位置空出来了，后面的元素，要符合标准文档流从上到下，从左到右排列的特点，那么就要占据前面空出来的位置
2.连续浮动一行显式；3.浮动可以以元素顶部为基准对齐，4.浮动可是实现模式转换；


清除浮动所影响的效果：1.clear谁收影响谁清除；2.left在左侧不允许浮动元素；right在右边不允许浮动元素；4.在左右侧不允许浮动元素；



javascript：
javascript和java的关系：
特点：JavaScript是一种轻量级的编程语言；2.是可插入HTML页面的编程代码；3.是一种弱类型的语言；4，它的解释器被称为javascript引擎，为浏览器的一部分；5.主要用来向HTML页面添加交互行为；6.跨平台特征，在绝大多数浏览器的支持下。
轻量级VS重量级：轻量级：html css js；重量级：java c++
弱类型语言：类型限制不严格(字面意思)
怎么在HTML中导入js：1.直接写在HTML页面内；2.引入外部的js文件

var关键字：javascript在声明是统一使用，JavaScript并没有避开数据类型，它的数据类型是根据所附的值的类型来确定的，JavaScript对大小写敏感；变量名有命名规范
ECMAscript：es6之前：只有var关键字；es6之后，新加了一些：let：用于局部作用域；const：一旦定义 了就不可以进行修改
js的花括号代表对象，[]中括号表示数组；

java中的数据类型：string number(在js中只要是个数，那么就是数值类型的，无论是整数还是浮点数，无论大小，无论正负)、boolean、数组、对象

函数和事件：
html：通过标签的嵌套来描述页面的层级结构
css：通过样式，描述HTML标签所具有的不同显示效果
js：主要用来向HTML页面添加交互行为

运算符：

js方向发展需要学习：后端开发-->node；前端--->vue，react，angular；手机 app--->flutter week reactnative；pc---->electron；小程序---->原生开发，  uni---app 多端开发

在分支语句中：
表现为假：0,空串,空对象,null，nan,false

for:一般使用我们使用普通的for循环fori遍历数组；在js中一般使用foreash循环遍历对象

注意：list.bb=“bb”并没有给数组中添加元素，但是添加了一个参数或者说是属性；使用for循环遍历只会遍历出数组元素，但是如果采用foreash循环会将其他参数 也会遍历出来，所以不建议使用；

integer常用api：tostring；tofixed返回字符串值，它包含了指定位数的小数的数字；toprecision()返回字符串值，包含了指定长度的数字(四舍五入)；parseint()获取字符串的数字的整数位；parsefloat获取字符串的数字整数位加小数位

string常用的api：length返回字符串的长度；indexof()返回指定文本首次出现的索引位置，如果找不到返回的-1；slice提取字符串中的某个部分，并在新字符串中返回被提取的部分；split()将字符串转换为数组；

array常用的api：tostring；pop从数组中删除最后一个元素；push()添加一个新的元素；splice()可以用来删除数组中的元素，也可以向数组添加，用作删除时元素第一个参数值其实位置，第二个参数是删除的元素的数量；

math中常用的api：ceil(x)返回大于或者是等于x的最小整数；floor(x)返回小于或者等于x的最大整数；random()返回0~1之间的随机数；round(x)把一个数四舍五入为最接近的整数；max返回最高值；min返回最低值

DOM：
DOM：Vue要基于DOM操作，文档对象模型视作树的结构；
DOM的解析顺序：1.解析HTML结构（自上向下的过程）2.在解析的过程中（代码一句一句读取），加载外部脚本和样式表文件。（因为这个HTML页面可能依赖外部的js/css文件，异步法网络请求来获取这个文件）
加载外部脚本成功，解析执行脚本代码；构造HTML和DOM模型完成，只要DOM模型构建完成，页面就开始显示；加载图片等外部文件
页面加载完毕
 获得DOM上面的节点：getelementbyid();getelementbyname()获取同名的节点；getElementsBytagname()
给DOM添加节点：appendchild添加节点
删除节点：remove child
tips：在HTML中连续的空格和换行都代表一个空格
替换节点：replace
inner：innertext，innerhtml 

作业讲解：我们在js代码中，能从HTML中获取的数据只能有一类


Vue：
在当下时代：前端--->三个基础：html，css，js；  三个框架：Vue；react；Angular
所有的页面：都可以直接用html css js直接实现；所有的前端基础/框架 都是基于 html css js
Vue
原生开发：贴近与底层语言的开发；成本高、稳定、运行速度快；

混合开发：原生技术+前端
前端：浏览器上套个壳

vue是渐进式框架。与其他重量级框架不同的是，vue采用的是自底向上的增量开发的设计，vue和核心库只关注注视图层

生态：衍生内容/框架/产品
















