现在计算机追求的几点内容：具有高时钟主频、流水线技术超级标量结构的硬件、易于使用的直观的图形用户界面、面向对象的系统、局域网和广域网技术；
循环不变式的三个重要的因素：初始化（在循环的第一轮迭代之前，应该都是正确的），保持（如果在循环的某一次迭代开始之前他是正确的，那么下一次迭代开始应该保持正确）和终止（当循环结束时，不变式给我们了一个有用的性质 有助于表明算法是正确的）；
伪代码书写时的一些约定：1.书写上的缩进表示程序中的程序块的结构，2.紧接着for循环之后循环计数器的值就是第一个超出for循环终止值得那个数字；3.倒三角表示后面部分是注释；4.多重赋值用连续的箭头表示；5，变量表示的是局部变量，在没有显式说明的情况下，不使用全局变量；6.数组元素是通过数组名【下标】来访问的；7.复合数据一班组织为对象，他们有属性或者是域组成的，域名后面跟的方括号表示的是对象名的形式；8.参数的传递过程采用的是按值传递方式，被调用的过程会受到参数的一份副本；9.布尔运算的and或or都具有短路能力；
分治法的策略：有很多算法在结构上是递归地，为了解决这一问题，算法要一次或者多次地递归调用自身来解决相关的子问题，然后再合并得到结果，得到原问题的解；
霍纳算法：也可以称作是中国秦九韶算法，核心思想是讲一元n次的多项式求值问题转换为n个一次式的求值问题，大大简化了计算过程，对于多项式求值问题普通亲狂下应该是n平方的时间复杂度，但是用霍纳算法可以达到n的时间复杂度；
几号theta，O和omiga的区别：theta几号限制一个函数在常数因子内，如果存在正常数n0则c1和c2使得函数f(n)在可能的最小值到无穷之间所有的值都存在于c1g（n）到c2g（n）之间；大写的O表示一个函数在常熟因子内的上线，如果存在正常数n0和c使得下限值到无穷的位置上永远处于cg(n)之内，则可以写成f(n)=O(g(n));omiga符号给出的一个函数在常熟因子内的下限，如果存在正常色下限n0，使得fn的值永远的处于cgn之上，则可以写成fn=（omiga）（gn）
非渐进紧确上下界与渐进紧确上下界：非渐进紧确上下界不包含下界相等的那种情况；

第四章：
三种解递归式的方法：代换法，递归树方法和主方法；
代换法 有两个步骤：猜测解的形式，用数学归纳法找出世界真正有效的常数
递归树方法：画一个递归树是一种的到好猜测的直接方法，在递归树中，每一个节点都代表递归函数调用的集合中的一个子问题的代价，我们将书中的每一层内的代价相加得到一个每层代价的集合，再将每层代价相加得到递归式所有层次的总代价，当用递归式表示分治算法的运行时间时，递归树的方法尤其有用；
主方法：主方法需要记忆三中情况，这样就很容易确定出许多递归式的解；
主定理：设tn=atn/b+fn；对非负整数的定义，则tn有如下的渐进界：对于某常数大于0


决策树：
最坏情况下界：在决策树中，从根到任意一个可达的叶节点之间的最长路径的长度，表示对应的排序算法中最坏情况下的比较次数，这样一个排序算法中的最坏情况比较次数就与其决策树中的高度相等
堆排序和合并排序都是渐进最优的比较排序算法；
在数据分布均匀的情况下，桶排序的期望运行时间为theta n；表示整个桶排序算法以现行期望时间进行，即使输入不符合均匀分布，桶排序也可以以线性的时间运行，只要满足各个桶尺寸的平方和和总的元素呈线性关系

最坏情况线性时间的选择：考虑这样一种算法，它的核心思想是要保证对数组的划分是个号的划分，并且采用来自快速排序的划分算法parttion；
select算法的核心思想是：1.将数组划分成每5个元素一组2.通过 插入排序找到找到算法中元素的中位数，3.对找到的中位数递归调用select算法找到其中位数4.利用快速排序的select算法来进行划分，能够判断x是第k小的元素；5. 如果x=i返回x，否则如果小于k则在低区找第k小的元素，如果是大于则在高区找第i-k小的元素；
以比较排序一样仅需要比较就能确定元素间的相对位置，在比较排序中即使是平均情况排序仍然会需要nlgn的时间，而寻找中位数的算法没有那么多时间，是因为它没有进行排序，线性时间的行为并不是因为对输入做假设所得到的结果，在比较模型中，即使是在平均情况下，排序仍然需要nlgn的时间

动态集合和集合中的元素：
